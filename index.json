[{"categories":null,"contents":" Force typing - pydantic Permet d\u0026rsquo;imposer les types. La vérification est effectuée à l\u0026rsquo;exécution. https://pydantic-docs.helpmanual.io/\nUtilisation :\nfrom pydantic import BaseModel class User(BaseModel): id: int name = \u0026#39;John Doe\u0026#39; signup_ts: datetime | None = None friends: list[int] = [] Une ValidationError est levée quand le type n\u0026rsquo;est pas respecté.\nfrom pydantic import ValidationError try: User(signup_ts=\u0026#39;broken\u0026#39;, friends=[1, 2, \u0026#39;not number\u0026#39;]) except ValidationError as e: print(e.json()) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mathias.truel.fr/notes/python/to_test/","summary":"\u003c!-- Condition --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eForce typing - pydantic\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003ePermet d\u0026rsquo;imposer les types. La vérification est effectuée à l\u0026rsquo;exécution.\n\u003ca href=\"https://pydantic-docs.helpmanual.io/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://pydantic-docs.helpmanual.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eUtilisation :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e pydantic \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e BaseModel\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eUser\u003c/span\u003e(BaseModel):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    id: int\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    name \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;John Doe\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    signup_ts: datetime \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eNone\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    friends: list[int] \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e []\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUne ValidationError est levée quand le type n\u0026rsquo;est pas respecté.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e pydantic \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e ValidationError\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    User(signup_ts\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;broken\u0026#39;\u003c/span\u003e, friends\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e[\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;not number\u0026#39;\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eexcept\u003c/span\u003e ValidationError \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    print(e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ejson())\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"To_test"},{"categories":null,"contents":" Basic syntax # Normes de formats Le style du code Python est donné par la norme PEP8. https://peps.python.org/pep-0008/ ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mathias.truel.fr/notes/python/basic/","summary":"\u003c!-- Condition --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eBasic syntax\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eNormes de formats\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003eLe style du code Python est donné par la norme PEP8.\n\u003ca href=\"https://peps.python.org/pep-0008/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://peps.python.org/pep-0008/\u003c/a\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Basic"},{"categories":null,"contents":" Venv Conda Pip ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mathias.truel.fr/notes/python/coding_env/","summary":"\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eVenv\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eConda\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003ePip\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Conding_env"},{"categories":null,"contents":" Exemple regression - Keras import tensorflow as tf from tensorflow import keras model = keras.models.Sequential() model.add(keras.layers.Input(shape, name=\u0026#34;InputLayer\u0026#34;)) model.add(keras.layers.Dense(32, activation=\u0026#39;relu\u0026#39;, name=\u0026#39;Dense_n1\u0026#39;)) model.add(keras.layers.Dense(64, activation=\u0026#39;relu\u0026#39;, name=\u0026#39;Dense_n2\u0026#39;)) model.add(keras.layers.Dense(32, activation=\u0026#39;relu\u0026#39;, name=\u0026#39;Dense_n3\u0026#39;)) model.add(keras.layers.Dense(1, name=\u0026#39;Output\u0026#39;)) model.compile(optimizer = \u0026#39;adam\u0026#39;, loss = \u0026#39;mse\u0026#39;, metrics = [\u0026#39;mae\u0026#39;, \u0026#39;mse\u0026#39;] ) history = model.fit(x_train, y_train, epochs = 60, batch_size = 10, verbose = fit_verbosity, validation_data = (x_test, y_test)) score = model.evaluate(x_test, y_test, verbose=0) predictions = model.predict( my_data ) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mathias.truel.fr/notes/python/machine_learning/","summary":"\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eExemple regression - Keras\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e tensorflow \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e tf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e tensorflow \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e keras\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e keras\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003emodels\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSequential()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eadd(keras\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elayers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eInput(shape, name\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;InputLayer\u0026#34;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eadd(keras\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elayers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eDense(\u003cspan style=\"color:#ae81ff\"\u003e32\u003c/span\u003e, activation\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;relu\u0026#39;\u003c/span\u003e, name\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Dense_n1\u0026#39;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eadd(keras\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elayers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eDense(\u003cspan style=\"color:#ae81ff\"\u003e64\u003c/span\u003e, activation\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;relu\u0026#39;\u003c/span\u003e, name\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Dense_n2\u0026#39;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eadd(keras\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elayers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eDense(\u003cspan style=\"color:#ae81ff\"\u003e32\u003c/span\u003e, activation\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;relu\u0026#39;\u003c/span\u003e, name\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Dense_n3\u0026#39;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eadd(keras\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elayers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eDense(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, name\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Output\u0026#39;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecompile(optimizer \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;adam\u0026#39;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e              loss      \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;mse\u0026#39;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e              metrics   \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e [\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;mae\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;mse\u0026#39;\u003c/span\u003e] )\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehistory \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e model\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003efit(x_train,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    y_train,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    epochs          \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e60\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    batch_size      \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    verbose         \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e fit_verbosity,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    validation_data \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (x_test, y_test))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003escore \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e model\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eevaluate(x_test, y_test, verbose\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epredictions \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e model\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epredict( my_data )\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Machine Learning"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mathias.truel.fr/notes/bash/basic/","summary":"\u003c!-- Variable --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eVariable\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eNAME\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;John\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho $NAME\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$NAME\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eNAME\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Condition --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eCondition\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[[\u003c/span\u003e -z \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$string\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  echo \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;String is empty\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eelif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[[\u003c/span\u003e -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$string\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  echo \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;String is not empty\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Bash Variables"},{"categories":["Machine Learning"],"contents":"Liens vers le GitLab Fidle\n1 - Introduction, Contexte et historique Intro et contexte : Approche avec les 4 paradigmes. Description du monde de l\u0026rsquo;IA. Machine Learning et Deep Learning. ( Schéma 3 disques ) Descriptions des 4 grandes familles du ML en fonction de l\u0026rsquo;apprentissage :\nSupervisé Non-supervisé Renforcement Transfert Les outils du deep-learning :\nKeras + Tensorflow (utilisé dans l\u0026rsquo;industrie) PyTorch + outils classiques (python, numpy, jupyter notebooks) Les environnements sont difficiles à installer -\u0026gt; Docker Besoin de puissance de calcul, donc on utilise des GPU. Des centres de calculs existent pour ça. Certains sont accessibles sur demandes (GENCI, Méso)\nPremière approche : Régression linéaire et régression logistique Sur un nuage de point. La solution peut être trouvée par calcul direct. Mais, quand il y a beaucoup de données cela ne marche plus (calcul trop lourd)\nUtilisation de la descente de gradient pour optimiser la fonction perte (loss function). La fonction qui optimise la descente est la fonction d\u0026rsquo;optimisation (Optimization function).\nPour des données, on va choisir un modèle (Linéaire, Polynomial de °N\u0026hellip;). Si modèle n\u0026rsquo;est pas bon, on peu faire :\nDe l\u0026rsquo;underfiting (Pas assez d\u0026rsquo;intelligence pour apprendre le phénomène ) De l\u0026rsquo;overfitting (Trop d\u0026rsquo;intelligence ) Régression logistique Classer des points Utilisation de biais, d\u0026rsquo;une fonction d\u0026rsquo;activation pour calculer un output. -\u0026gt; C\u0026rsquo;est un neurone artificiel\nDétermination des poids et biais avec la descente de gradient\nRésumé : Un neurone est une fonction simple qui a des poids et un biais. Il permet la régression et la classification.\nHistorique L\u0026rsquo;intelligence : Deux conception de l\u0026rsquo;intelligence :\nConnectioniste : Résultat d\u0026rsquo;un ensemble de petites fonction élémentaires (Neurones) Symbolique : Forger une opinion via des inférences graph LR; A[Input] --\u003e D[algo connectiviste] B[Output] --\u003e D D --\u003e C[Program] A2[Input] --\u003e D2[algo symbolique] B2[Program] --\u003e D2 D2 --\u003e C2[Output] Ce sont deux approches trés différentes.\nLa rétropropagation Idée : grouper des neurones en réseau en faisant des couches.\nPermet des comportement non linéaire Comment régler les parametres ? Back-propagation : Mise a jour des poids du réseau à partir de l\u0026rsquo;erreur Epoch : Un cycle Feed forward + calcul de loss + backpropagation\nExemple:\nOn donne 128 valeurs au réseau (1 batch), 128 predictions, calcul de la loss (1 fois), back-prop en fonction de la loss (1 fois) SVM (Support Vector Machine) Concurrent du Deep Learning\nExemple : Prédiction du prix du vin Exemple : Classification des chiffres manuscrits Questions Aléatoire? :\nDans l\u0026rsquo;initialisation des poids Dans les dataset -\u0026gt; De résultats sont reproductibles si on arrivbe à la même conclusion Intéret des batch : Reduire les calculs Utiliser les archi // des pc Exploration du dataset plus ou moins rapide Lissage de l\u0026rsquo;influence des valeurs Compromis biais/variance Sur-apprentissage : ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://mathias.truel.fr/posts/machine-learning/fidle/","summary":"\u003cp\u003eLiens vers le GitLab \u003ca href=\"https://gricad-gitlab.univ-grenoble-alpes.fr/talks/fidle/-/wikis/Fidle%20%C3%A0%20distance/Pr%C3%A9sentation\" target=\"_blank\" rel=\"noopener\"\u003eFidle\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"1---introduction-contexte-et-historique\"\u003e1 - Introduction, Contexte et historique\u003c/h1\u003e\n\u003ch2 id=\"intro-et-contexte-\"\u003eIntro et contexte :\u003c/h2\u003e\n\u003cp\u003eApproche avec les 4 paradigmes. \u003cbr /\u003e\nDescription du monde de l\u0026rsquo;IA. Machine Learning et Deep Learning. ( Schéma 3 disques ) \u003cbr /\u003e\nDescriptions des 4 grandes familles du ML en fonction de l\u0026rsquo;apprentissage :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSupervisé\u003c/li\u003e\n\u003cli\u003eNon-supervisé\u003c/li\u003e\n\u003cli\u003eRenforcement\u003c/li\u003e\n\u003cli\u003eTransfert\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLes outils du deep-learning :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eKeras + Tensorflow (utilisé dans l\u0026rsquo;industrie)\u003c/li\u003e\n\u003cli\u003ePyTorch\u003c/li\u003e\n\u003cli\u003e+ outils classiques (python, numpy, jupyter notebooks)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLes environnements sont difficiles à installer -\u0026gt; Docker\nBesoin de puissance de calcul, donc on utilise des GPU. Des centres de calculs existent pour ça. Certains sont accessibles sur demandes (GENCI, Méso)\u003c/p\u003e","tags":["Machine Learning"],"title":"Deep Learning - formation Fidle"}]